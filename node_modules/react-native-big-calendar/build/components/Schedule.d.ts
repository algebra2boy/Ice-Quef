import dayjs from 'dayjs';
import React from 'react';
import { TextStyle, ViewStyle } from 'react-native';
import { CalendarCellStyle, EventCellStyle, EventRenderer, HorizontalDirection, ICalendarEventBase } from '../interfaces';
interface ScheduleProps<T extends ICalendarEventBase> {
    events: T[];
    cellHeight: number;
    containerHeight: number;
    dateRange: dayjs.Dayjs[];
    scrollOffsetMinutes: number;
    ampm: boolean;
    showTime: boolean;
    style: ViewStyle;
    eventCellStyle?: EventCellStyle<T>;
    calendarCellStyle?: CalendarCellStyle;
    hideNowIndicator?: boolean;
    overlapOffset?: number;
    onLongPressCell?: (date: Date) => void;
    onPressCell?: (date: Date) => void;
    onPressEvent?: (event: T) => void;
    onSwipeHorizontal?: (d: HorizontalDirection) => void;
    renderEvent?: EventRenderer<T>;
    headerComponent?: React.ReactElement | null;
    headerComponentStyle?: ViewStyle;
    hourStyle?: TextStyle;
    hideHours?: Boolean;
    isEventOrderingEnabled?: boolean;
    showVerticalScrollIndicator?: boolean;
    activeDate?: Date;
    weekDayHeaderHighlightColor?: string;
    dayHeaderHighlightColor?: string;
    itemSeparatorComponent?: React.ComponentType<any> | null | undefined;
}
declare function _Schedule<T extends ICalendarEventBase>({ events, ampm, onPressEvent, eventCellStyle, showTime, isEventOrderingEnabled, overlapOffset, renderEvent, containerHeight, style, activeDate, weekDayHeaderHighlightColor, dayHeaderHighlightColor, itemSeparatorComponent, }: ScheduleProps<T>): JSX.Element;
export declare const Schedule: typeof _Schedule;
export {};
